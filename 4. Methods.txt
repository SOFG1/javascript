
				Методы JavaScript  

	Методы JavaScript почти тоже самое что и свойства, только они состоят из функции которое выдает какое-то свойство.

	Т.е. чтобы получить какое то значение мы должны написать скобки для применения функции.


		Пример: string.toLowerCase() -  если мы напишем метод без скобок мы получим функцию, а не само свойство.

			var lowString = string.toLowerCase();






Методы которые я знаю:

1) string.toUpperCase(); - Метод который, превращает все символы строки в заглавные.

2) string.toLowerCase(); - Метод который, превращает все символы строки в строчные(маленькие).

3) stringOrArray.includes(значение) - Свойство .includes выдает boolean(true or false). Если строка или массив включает в себя данные из скобок, оно выводит значение - true, если нет - false.

	Пример: list.includes("Jack") - массив содержит это значение то оно выдает boolean true , если нет выдает boolean true.  P.S. Метод работает только со строками и массивами.





4) array.push(значение); - Метод добавляет значение которое в скобках в массив в самую последнюю ячейку. И выдает длину массива после добавления.

5) array.pop(); - Метод вынимает последнее значение из массива и выдает данное значение

6) array.unshift(значение); -   Метод добавляет значение в скобках в первую ячейку массива.

7) array.shift(); - Метод вынимает перее значение из массива и выдает данное значение.







8) classList.add("class"); - Добавление классов в список классов какого либо элемента 

9) classList.remove("class"); - Удаления класса из списка классов элемента

10) .classList.toggle("class"); - Включение / Выключение классов элемента

11) classList.contains("class") -  Проверка класса // Выдает true or false





11).setAttribute("attribute", "value") - Установка(изменение) значения аттрибута.         Пример: document.querySelector(".social__link").setAttributes("href", "https://www.facebook.com")

12).removeAttribute("attribute") - Удаление существующего аттрибута.








13) let sum = array.concat() - Слияение нескольких массивов вместе

	Пример : animals = animals.concat(fishes);      p.s. - С данным кодом сперва будут стоять элементы animals потом элементы fishes.
	p.s. - Мы можем добавлять больше чем 2 массива с помощью concatenate(), указав несколько массивов в скобках
	Пример : var allAnimals = animals.concat(fishes,scalies,furries).
	
	Также данный метод не присваивает, новое значение, а выдает. Значит мы должны добавить в новую переменную






		

14) setTimeout() - Тайм-аут

	Пример :  setTimeout( function () { alert("Hello !") }, 1000 );  

	p.s. - Когда интерпретатор дойдет до строчки этого кода, он добвавит код в Event Loop и код выполнится через указанное время. Но интерпретатор не задержится и пойдет дальше без остановки.





15) setInterval(functionName, time) -  Повторение функции за промежуток времени. Функция будет повторяться за каждый промежуток времени.  

	Пример: var repeat = setInterval(sayHello, 2000) - Мы добавляем setInteval в переменную чтобы при надобности остановить с clearInterval();





16) clearInterval(intervalVar)  Удаление интервала. Удаляет интервал. В скобках пишем переменную в которую добавляли interval   







17) array.indexOf()  -  Выдает индекс(номер порядка) значения в скобках в данном массиве.       Если значение в массиве отсутствует выдает  -1.





18) array.join(separator)  -  Преобразует массив в строку с запятыми(по умолчанию) между данными. Мы можем указать знак(и) между значениями в скобках

		Пример:  var list = animals.join('. .')   // Выдаст к примеру     lion. .croco. .horse. .turtle





19) Object.keys(ObjectName)  -  Выдает массив с названиями каждого ключевого слова обьекта.




20) Object.values(ObjectName)	-	Выдает массив со значениями элементов обьекта.   








21) event.preventDefault() - Прерывание действия по умолчанию.  Применяется к событию(клику).

	Пример :  link.addEventListener("click", function(event) {  event.preventDefault   });  // Например предотвращает переход по ссылке(по умолчанию)






22) event.stopPropogation(); - Предотвращает распространение события на родителей элемента. Если мы кликаем на элемент в DOM то мы кликаем по родителям тоже. Этим методом мы предотвращаем клик на родителей.









23) isNaN(переменная) - Проверка типа данных (число или строка).  Если тип переменной string - выдает true, если number или boolean выдает false.









24) .toString(base) - Превращает перменную(число например) в строку.                 Это обратный метод   .parseInt();			Пример:   	number.toString(10);










25) string.replace()  -  Меняет содержимое строки на другое...     Пример     var string = "bee loves honey"        string.replace("bee", "bear")   // string = "bear loves honey"  












26) element.closest('selector')            Выдает ближайшего предка по DOM с данным селектором. Ищет до самого <html>. Если совпадений нет выдает null.










27) Number(variable)        -      преобразовывает variable в число










28) array.forEach()	-	Применяет функцию для каждого элемента массива.			// См. Методы массивов, 1.









29) array.map()     -     Похожее на .forEach для создания нового видоизмененного массива из старого.    			// См. Методы массивов, 2.





30) Object.create(protoObj)	-	Создает новый обьект, у которого прототипом будет обьект в скобках.			// См. Классы и прототипы

	Пример: var me = Object.create(person);






31) Object.assign(FirstObject, SecondObject)		-	Выдает, а также менят первый обьект на результат сливания двух обьектов. Пересекающиеся данные заменяет на данные второго обьекта.





32) .createElement('div')  	-	Создает новый html элемент


33) .appendChild()	-	Добавляет потомка в html элемент. 

	Пример: element.appendChild(document.createElement('b'))





34) string.charAt(index) - Возвращает символ с указанным индексом из строки







35) Math.abs(number) - Выдает модуль числа. Только положительное число.










35) array instanceOf ObjectClass - Проверят наличие в цепочке прототипов первого массива наличие Прототипа класса. Выдает boolean





36) string.split(separator) - Разделяет строку на разделенные элементы и выдает новый массив с кусками строки в каждом элементе. separator - кусок строки, который послужит перегородкой и в новый массив не попадет.










37) Number.isInteger(numberVar) - Выдает true, если переменная(число) в скобках целое число. Если не целое число или другой тип данных выдает false.




38) Date.toLocaleDateString() - Превращает js дату в строку, с учетом языка часового пояса и формата. Этот метод принимает 2 параметра - язык и формат выдачи.

	Примеры:  var date = new Date();

		date.toLocaleDateString(); 													// 12/29/2021

		date.toLocaleDateString('ru-RU', {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'});				// среда, 29 декабря 2021 г.

		date.toLocaleDateString('ru-RU', {weekday: 'long'}) - Выдает только день недели в буквах 					// Воскресенье





39) object.hasOwnProperty(key) - Возвращает boolean, есть ли у обьекта в ключевых словах свойство 'key'. Проверяет только в обьекте, не в прототипах.

































