					Условные операторы (javascript conditions, statements)

		Условные операторы это блоки кода, которые выполняются если соблюдены условия условного оператора. - if, else if, else




1) Условные операторы if, else if , else


		if (string.length < 5) {

					// Код который выполняется если условие в скобкахх верное 

	 	} else if (string.length > 10) {

					// Код который выполняется если соблюдено условие в этом операторе.
		 } else {

					// Код который выполняется если не соблюдены ни одно из вышеперечисленных условий

		}




	Пример - В условиях могут указыватся неограниченное кол-во условий через операторы.

		(условие1 && условие2) {

				// Если условие1 и условие2 выдают true данный код выполняется

				}
	










2) Switch Statements - Switch - Переключатель функций.




	Это условия похожие на "if, else if, else" - Только с упрощенным синтаксисом.


		Пример одинакового кода ( с "if else if else") :

			var buttonInner = this.innerHTML;

			if (buttonInner === "W") {

				var tom1 = new Audio('./sounds/tom-1.mp3');

				sound.play();

			} else if (buttonInner === "q") {

				var tom2 = new Audio('./sounds/tom-2.mp3');

				sound.play();

			} else if (buttonInner === "a") {

				var tom3 = new Audio('./sounds/tom-3.mp3');

				sound.play();

			}



		Пример одинакового кода с (switch) : 


			var buttonInner = this.innerHTML;

			switch (buttonInner) {

			case "w":

			var tom1 = new Audio('./sounds/tom-1.mp3');

			tom1.play();

			break;

			
			case "q":

			var tom2 = new Audio('./sounds/tom-2.mp3');
	
			tom2.play();

			break;

			
			case "a":

			var tom3 = new Audio('./sounds/tom-2.mp3');

			tom3.play();

		
			default: console.log("Error");

			}




			Сходства: switch ( тут мы указываем переменную по которому будет проверяться значение)

				  case " Тут мы указываем значение переменной проверки ":	                                 switch(inner);  case "hello" : ;   =    if (inner === "hello");

				break; - Мы указываем его тогда, когда закончили с одним условием и выполнением кода и переходим к другому условию.

				default: - Мы указываем код после "default:" который будет выполняться если не соблюдено не одно условие из предыдущих (аналог "else") 





























3)     Операторы сравнения

			1)	"==" - выдает true если данные на обеих сторонах равны...                 		 e.g.      2 = "2"   // true

			2)	"===" - выдает true если данные на обоих сторонах ссылаются на одно и тоже.              e.g.       2 === "2" // false     var a = ['a','b'];   var b = ['a','b']     a === b   //  false

			3)	"!==" - выдает true если данные на обеих сторонах не равняются				 e.g.       2 !== "3" // true

			4) 	 Также  "<", ">", "<=", ">="










4)      Логические операторы 

				3)     "||" or  -  условие верное если ОДНО из значений двух сторон верное   

				4)     "&&" and   -   условие верное если ОБА значения на двух сторонах верные 		

				5)	"!" not  -    условие верное если значение НЕ верное           Пример: if (!lightIsRed) {  //Если свет не красный выполнится этот код.           }

				6)	in	-	условие верное если первый оперант состоит в свойствах или в прототипной цепи обьекта правого операнта.

				7) Тернарный	-	условие ? результат1 : результат2.	если условие выдает true, выполнится 1-ый результат, если нет 2-ой.

							else if в тернарном операторе можно получить с помощью вложенности во второй результат

							Пример: 3 > 4 ? "true" : (3 == 3 ? "true" : "false");








5) Виды операторов:

	1) Унарные - работают с одним оператором.	Пример:  a++, --a, -a...				PS - тут мы работаем с одним оператором.

	2) Бинарные - работают с двумя операторами.	Пример: a + b, a - c, a += d...				PS - мы тут работаем с двумя операторами.

	3) Тернарные - работают с тремя операторами.	











6) Условные операторы имеют приоритетность... См. таблицу приоритетов операторов.

	PS - операторы в скобках имеют больший приоритет.






























