			
					Циклы(Loops)


1) Цикл WHILE - Интерпретатор будет выполнять код в скобках, до тех по аока условие верное и не выйде из него (не будет читать код после него)

		ПРИМЕР: WHILE (trueCondition) {
						// Код который будет бесконечно повторяться пока условие верное

					     }







2) Цикл FOR - Повторяет код в скобках. Включает в себя перменную, условие, и значение изменения переменной при каждом цикле выполнения кода.					////////////   ES5
 
		ПРИМЕР: FOR (var i = 0; i < buttons.length; i++) {

								// Этот цикл содержит переменную со значением 0,
					
								   И условие 0 < кол-во кнопок, и увеличения i на 1.

								Т.Е. код будет выполняться по i меньше кол-ва кнопок и
		
								будет уквеличиваться на 1 при каждом выполнении кода.

								  }









3)  break;   -   ключевое слово, используется в циклах. Когда интерпретатор читает break, он приостонавливает цикл и выходит из него. Даже если условие в цикле верное.















4) Цикл FOR OF  -  цикл FOR OF  применяется к элементам массива. Похож на forEach.													////// ES6

		ПРИМЕР: var buttons = document.querySelectorAll('game-btn');	// массив с элементами	

			for (VAR btn OF buttons) {	// Переменную btn мы создали для каждой кнопки из buttons. И каждый раз в переменную заново добавляется текущая кнопка.

							btn.addEventListener('click', function () {  console.log(btn.getAttribute('data-index')) });

						 }







27) Цикл / Метод   .forEach()		-	Применяет функцию для каждого элемента массива.					// См. Методы массивов, 1.






28) array.map()     -     Похожее на .forEach для создания нового видоизмененного массива из старого.    			// См. Методы массивов, 2.












29) Цикл DO WHILE - почти тоже самое, что и while, только в другом синтаксисе. PS - разница в том, что DO WHILE выполнится как минимум 1 раз т.к. условие проверяется в конце.

			Пример: DO {

					//code

					} while (condition);

























